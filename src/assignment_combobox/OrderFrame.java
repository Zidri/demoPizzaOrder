/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment_combobox;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author joannaahannigan
 */
public class OrderFrame extends javax.swing.JFrame {

    DefaultListModel toppings = new DefaultListModel();
    DefaultListModel extras = new DefaultListModel();

    //arrays for combo and list boxes
    String[] size = {"Small - $3", "Medium - $5", "Large - $7"};
    String[] deliver = {"Pick-Up", "Delivery - $5"};
    String[] toppingslist
            = {"None", "Cheese", "Beef", "Pepperoni", "Sausage", "Italian Sausage", "Ham", "Bacon"};
    String[] extraslist
            = {"None", "Onions", "Pineapple", "Mushrooms", "Extra Cheese", "Peppers"};

    //vars for order and total
    String Order = "";
    //double runTot = 0.00;
    double Total = 0.00;

    //string of Topselected items in list
    String selToppings = "";
    String selExtras = "";

    public OrderFrame() {
        initComponents();

        //center window
        this.setLocationRelativeTo(null);

        //add title to frame
        this.setTitle("Pizza Order");

        //remove size data
        jcbSize.removeAllItems();

        //add size data
        for (int i = 0; i < size.length; i++) {
            jcbSize.addItem(size[i]);
        }

        //remove delivery data
        jcbDeliver.removeAllItems();

        //add delivery data
        for (int i = 0; i < deliver.length; i++) {
            jcbDeliver.addItem(deliver[i]);
        }

        //add toppings data
        for (int i = 0; i < toppingslist.length; i++) {
            toppings.addElement(toppingslist[i]);
        }

        //load data to model
        jlistToppings.setModel(toppings);

        //add extras data
        for (int i = 0; i < extraslist.length; i++) {
            extras.addElement(extraslist[i]);
        }

        //load data to model
        jlistExtras.setModel(extras);

    }

    private void UpdateOrder() {

        Order = "Name: " + jtFName.getText() + " " + jtLName.getText()
                + "\nSize: " + jcbSize.getSelectedItem()
                + "\nDelivery Method: " + jcbDeliver.getSelectedItem()
                + "\nToppings:\n" + selToppings
                + "\nExtras: " + selExtras;
        jtaOrder.setText(Order);
    }

    private void UpdatePrice() {
        //reset price
        Total = 0.00;

        //get price based on size
        if (jcbSize.getSelectedIndex() == 0) {
            Total = Total + 3.00;
        } else if (jcbSize.getSelectedIndex() == 1) {
            Total = Total + 5.00;
        } else if (jcbSize.getSelectedIndex() == 2) {
            Total = Total + 7.00;
        }

        //get price if delivery
        if (jcbDeliver.getSelectedIndex() == 1) {
            Total = Total + 5.00;
        }

        //get selected toppings in list
        var Topselected = jlistToppings.getSelectedValuesList();

        //run through selected toppings add $1 each
        for (var value : Topselected) {
            if (String.valueOf(value) != "None") {
                Total = Total + 1.00;
            }
        }

        //get selected extras in list
        var Exselected = jlistExtras.getSelectedValuesList();

        //run through selected extras add $.5 each
        for (var value : Exselected) {
            if (String.valueOf(value) != "None") {
                Total = Total + 0.50;
            }
        }

        //print total
        jlTotal.setText("$" + Total);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlFName = new javax.swing.JLabel();
        jlLName = new javax.swing.JLabel();
        jtFName = new javax.swing.JTextField();
        jtLName = new javax.swing.JTextField();
        jcbSize = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlistToppings = new javax.swing.JList<>();
        jlToppings = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlistExtras = new javax.swing.JList<>();
        jlExtras = new javax.swing.JLabel();
        jcbDeliver = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtaOrder = new javax.swing.JTextArea();
        jlOrder = new javax.swing.JLabel();
        jlTotal = new javax.swing.JLabel();
        jbClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlFName.setText("First Name");

        jlLName.setText("Last Name");

        jtFName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtFNameFocusLost(evt);
            }
        });

        jtLName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtLNameFocusLost(evt);
            }
        });

        jcbSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSizeActionPerformed(evt);
            }
        });

        jlistToppings.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jlistToppings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlistToppingsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jlistToppings);

        jlToppings.setText("Toppings - $1 Each");

        jlistExtras.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jlistExtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlistExtrasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jlistExtras);

        jlExtras.setText("Extras - $0.50 Each");

        jcbDeliver.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbDeliver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDeliverActionPerformed(evt);
            }
        });

        jtaOrder.setColumns(20);
        jtaOrder.setRows(5);
        jScrollPane3.setViewportView(jtaOrder);

        jlOrder.setText("Order Preview");

        jlTotal.setText("Total: $0.00");

        jbClear.setText("Clear");
        jbClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jlOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jlToppings, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jcbSize, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jtFName, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtLName, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbDeliver, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlExtras, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jlFName)
                        .addGap(136, 136, 136)
                        .addComponent(jlLName)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbClear)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jbClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlFName)
                    .addComponent(jlLName))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbDeliver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlToppings)
                    .addComponent(jlExtras))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlOrder)
                    .addComponent(jlTotal))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSizeActionPerformed

        UpdateOrder();
        UpdatePrice();

    }//GEN-LAST:event_jcbSizeActionPerformed

    private void jcbDeliverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDeliverActionPerformed

        UpdateOrder();
        UpdatePrice();

    }//GEN-LAST:event_jcbDeliverActionPerformed

    private void jtFNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtFNameFocusLost

        UpdateOrder();
        UpdatePrice();
    }//GEN-LAST:event_jtFNameFocusLost

    private void jtLNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtLNameFocusLost

        UpdateOrder();
        UpdatePrice();
    }//GEN-LAST:event_jtLNameFocusLost

    private void jlistToppingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlistToppingsMouseClicked

        //reset toppings selection
        selToppings = "";

        //get list from selected
        List<String> selected = jlistToppings.getSelectedValuesList();

        //disallow multi-selects with None
        if (selected.get(0).equals("None")) {
            //select none
            jlistToppings.setSelectedIndex(0);
            //print None
            selToppings = "\tNone\n";
        } else {
            //run through list
            for (var value : selected) {
                //check if None selected
                if (String.valueOf(value) != "None") {
                    //check if repeat 
                    if (selToppings != String.valueOf(value)) {
                        //add selection to list
                        selToppings = selToppings + "\t" + String.valueOf(value) + "\n";
                    }
                } else {
                    //print None
                    selToppings = "\t" + String.valueOf(value) + "\n";
                }

            }
        }

        UpdateOrder();
        UpdatePrice();

    }//GEN-LAST:event_jlistToppingsMouseClicked

    private void jlistExtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlistExtrasMouseClicked

        //reset toppings selection
        selExtras = "";
        //get list from selected
        List<String> selected = jlistExtras.getSelectedValuesList();
        
        //disallow multi-selects with None
        if (selected.get(0).equals("None")) {
            //select none
            jlistExtras.setSelectedIndex(0);
            //print None
            selExtras = "\tNone\n";
        } else {
            //run through list
            for (var value : selected) {

                //check if None selected
                if (String.valueOf(value) != "None") {
                    //check if repeat 
                    if (selExtras != String.valueOf(value)) {
                        //add selection to list
                        selExtras = selExtras + "\t" + String.valueOf(value) + "\n";
                    }
                } else {
                    //print None
                    selExtras = "\t" + String.valueOf(value) + "\n";
                }

            }
        }

        UpdateOrder();
        UpdatePrice();
    }//GEN-LAST:event_jlistExtrasMouseClicked

    private void jbClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClearActionPerformed

        //clear name
        jtFName.setText("");
        jtLName.setText("");

        //reset size
        jcbSize.setSelectedIndex(0);

        //reset delivery
        jcbDeliver.setSelectedIndex(0);

        //unselect Toppings
        jlistToppings.setSelectedIndex(0);
        //empty selected toppings string
        selToppings = "";

        //unselect Extras
        jlistExtras.setSelectedIndex(0);
        //empty selected extras string
        selExtras = "";

        //clear order text
        UpdateOrder();

        //clear price
        UpdatePrice();

        //set focus on first name
        jtFName.requestFocus();

    }//GEN-LAST:event_jbClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbClear;
    private javax.swing.JComboBox<String> jcbDeliver;
    private javax.swing.JComboBox<String> jcbSize;
    private javax.swing.JLabel jlExtras;
    private javax.swing.JLabel jlFName;
    private javax.swing.JLabel jlLName;
    private javax.swing.JLabel jlOrder;
    private javax.swing.JLabel jlToppings;
    private javax.swing.JLabel jlTotal;
    private javax.swing.JList<String> jlistExtras;
    private javax.swing.JList<String> jlistToppings;
    private javax.swing.JTextField jtFName;
    private javax.swing.JTextField jtLName;
    private javax.swing.JTextArea jtaOrder;
    // End of variables declaration//GEN-END:variables
}
